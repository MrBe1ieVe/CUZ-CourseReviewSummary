#p:各点坐标，q:质心坐标，d1:各点到质心1的距离，d2:各点到质心2的距离，t用来判断一个点在哪个簇中。
p = [[0., 0.], [1., 0.], [0., 1.], [2., 1.], [4., 5.], [6., 4.], [8., 5.], [9., 4.], [8., 9.], [9., 9.]]
q = [[0., 0.], [6., 4.]]
d1 = []
d2 = []
t = []
#以下变量只用作计算方便
x1=0
sx1=0
sy1=0
x2=0
sx2=0
sy2=0
xx=10

if __name__ == '__main__':
    while(xx):  #迭代多次得到收敛值
        # 得到并比较距离等数据
        for i in range(len(p)):
            d1 = d1 + [((p[i][0] - q[0][0]) ** 2 + (p[i][1] - q[0][1]) ** 2) ** 0.5]
            d2 = d2 + [((p[i][0] - q[1][0]) ** 2 + (p[i][1] - q[1][1]) ** 2) ** 0.5]
            if d1[i] > d2[i]:
                t = t+[2]
            elif d1 < d2:
                t = t+[1]

        #更新质心距离数据
        for i in range(len(p)):
            if t[i] == 1:
                x1=x1+1
                sx1=sx1+p[i][0]
                sy1=sy1+p[i][1]
            elif t[i]==2:
                x2 = x2 + 1
                sx2 = sx2 + p[i][0]
                sy2 = sy2 + p[i][1]
        q[0][0]=sx1/float(x1)
        q[1][0]=sx2/float(x2)
        q[0][1]=sy1/float(x1)
        q[1][1]=sy2/float(x2)

        #初始化各值
        x1=x2=sx1=sy1=sx2=sy2=0
        xx = xx - 1

    print(q)
